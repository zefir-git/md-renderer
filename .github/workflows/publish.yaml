name: Build and Publish

on:
  release:
    types: [published]

permissions:
  packages: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  IMAGE_NAME: renderer

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/
          cache: npm

      - name: Install latest NPM
        run: npm i -g npm@latest

      - name: Install dependencies
        run: npm ci

      - name: Set version from release tag
        run: npm version ${{ github.event.release.tag_name }} --git-tag-version=false

      - name: Vite build
        run: npm run build

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to GitHub Container Registry
        run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          TAG=${{ github.event.release.tag_name }}
          VERSION=${TAG#v}
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Set up GitHub pages
        if: "!github.event.release.prerelease"
        uses: actions/configure-pages@v5

      - name: Upload to GitHub pages
        if: "!github.event.release.prerelease"
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub pages
        if: "!github.event.release.prerelease"
        id: deployment
        uses: actions/deploy-pages@v4
